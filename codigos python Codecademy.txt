def digit_sum(n):
  
  s = str(n)
  lista = []
  lista_int = []
  soma = 0
  
  for i in s:
    lista.append(i)
  
  lista_int = [int(elem) for elem in lista]
  
  for i in lista_int:
    soma = soma + i
    
  return soma

//soma todos os digitos 
def digit_sum(x):
    total = 0
    while x > 0:
        total += x % 10
        x = x // 10
        print x
    return total

//fatorial em python

def factorial(x):
  
  fac = 1
  while(x >= 1):
    fac = fac * x
    x = x - 1
  return fac


//numeros primos em python
def is_prime(x):
    if x < 2:
        return False
    else:
        for n in range(2, x-1):
            if x % n == 0:
                return False
        return True



//String reversa em python
def reverse(text):
  
  s = ''
  
  for t in range(len(text)-1, -1, -1):
    s =  s + text[t]
  return s


//remover vogais em python
def anti_vowel(text):
    t=""
    for c in text:
        for i in "ieaouIEAOU":
            if c==i:
                c=""
            else:
                c=c
        t=t+c
    return t

//pegar valor de uma palavra  num dicionario 
score = {"a": 1, "c": 3, "b": 3, "e": 1, "d": 2, "g": 2, 
         "f": 4, "i": 1, "h": 4, "k": 5, "j": 8, "m": 3, 
         "l": 1, "o": 1, "n": 1, "q": 10, "p": 3, "s": 1, 
         "r": 1, "u": 1, "t": 1, "w": 4, "v": 4, "y": 4, 
         "x": 8, "z": 10}

def scrabble_score(word):
  soma = 0
 
  for letter in word:
    soma = soma + score.get(letter.lower())
  return soma

//substituir valores numa string
def censor(text, word):
  str = ""
  
  str = text.replace(word, "*" *len(word))
  
  return str

//Pegar valor numa lista
def count(sequence, item):
    count = 0
    for i in sequence:
        if i == item:
            count += 1
    return count   

//pegar valores pares de uma lista
def purify(lista):
  lista_pares = []
  
  for i in lista:
    if( i % 2 == 0):
      lista_pares.append(i)
  return lista_pares

//calcular valores em uma lista
def product(lista):
  
  valor = 1;
  for l in lista:
    valor = valor * l
  return valor

//remover valores duplicados numa lista
def remove_duplicates(inputlist):
    if inputlist == []:
        return []
    
# Sort the input list from low to high    
    inputlist = sorted(inputlist)
# Initialize the output list, and give it the first value of the now-sorted input list
    outputlist = [inputlist[0]]

# Go through the values of the sorted list and append to the output list
# ...any values that are greater than the last value of the output list
    for i in inputlist:
        if i > outputlist[-1]:
            outputlist.append(i)
        
    return outputlist


//encontrar mediana
def median(lst):
    sorted_list = sorted(lst)
    if len(sorted_list) % 2 != 0:
        #odd number of elements
        index = len(sorted_list)//2 
        return sorted_list[index]
    elif len(sorted_list) % 2 == 0:
        #even no. of elements
        index_1 = len(sorted_list)/2 - 1
        index_2 = len(sorted_list)/2
        mean = (sorted_list[index_1] + sorted_list[index_2])/2.0
        return mean
   
print median([2, 4, 5, 9])